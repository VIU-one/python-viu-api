name: Build, Generate Client, and Publish to PyPI

on:
  # This workflow runs when you push a new version tag (e.g. v1.2.3)
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install grpcio grpcio-tools build

      - name: Generate Python client code from proto files
        run: |
          # Create the output directory (named "client") if it doesn't exist.
          mkdir -p client
          # Generate the Python files from both proto files.
          # The -I flag sets the proto import path so that included files are resolved correctly.
          python -m grpc_tools.protoc -I proto --python_out=client --grpc_python_out=client proto/jinaembed.proto proto/viu-api.proto
          # Ensure the generated folder is a Python package.
          touch client/__init__.py

      - name: Create README.md for client usage
        run: |
          cat << 'EOF' > README.md
          # Python Client for Viu API

          This package provides the generated Python client code for accessing various text embedding services
          via gRPC. It is built from proto files found in the `proto` directory.

          ## Installation

          Install the package using pip:

          ```bash
          pip install your-package-name
          ```

          ## Usage

          Import the generated modules in your Python code:

          ```python
          from client import jinaembed_pb2, viu_api_pb2, viu_api_pb2_grpc
          import grpc

          # Example: Create a request for Jina embeddings
          request = jinaembed_pb2.JinaEmbedRequest(
              texts=["Sample text"],
              task=jinaembed_pb2.RETRIEVAL_QUERY,
              truncate_dim=128
          )

          # Set up a gRPC channel (adjust the target as needed)
          channel = grpc.insecure_channel('localhost:50051')
          stub = viu_api_pb2_grpc.ApiServiceStub(channel)

          # Call the EmbedJinaEmbeddingsV3 RPC
          response = stub.EmbedJinaEmbeddingsV3(request)
          print(response)
          ```

          ## Supported Models

          - NVEmbedV2
          - BGEGemma2
          - JinaEmbeddingsV3

          EOF

      - name: Build the package
        run: python -m build

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@v1.5.1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
