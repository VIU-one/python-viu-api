name: Publish Python Package

on:
  release:
    types: [published]
    tags:
      - "live-*"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Extract Version from Tag
        run: echo "PACKAGE_VERSION=$(echo ${GITHUB_REF#refs/tags/live-})" >> $GITHUB_ENV

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install twine "betterproto[compiler]" betterproto grpcio grpcio-tools

      - name: Create __init__.py in root
        run: touch __init__.py  # Create the root __init__.py

      - name: Generate gRPC Code (Directly to Root)
        run: |
          python -m grpc_tools.protoc -Iproto --python_betterproto_out=viuapi proto/viu-api.proto
          python -m grpc_tools.protoc -Iproto --python_betterproto_out=jinaembed proto/jinaembed.proto
          touch viuapi/__init__.py
          touch jinaembed/__init__.py

      - name: Build package
        run: python setup.py sdist bdist_wheel  # Assuming you have a setup.py

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload dist/*

  generate-readme:
    runs-on: ubuntu-latest
    needs: deploy

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch entire history

      - name: Switch to Main Branch
        run: |
          git checkout main
          git pull origin main  # Get latest main

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install "betterproto[compiler]" betterproto grpcio grpcio-tools

      # Install protoc system-wide (THIS IS KEY!)
      - name: Install protoc
        run: sudo apt-get update && sudo apt-get install -y protobuf-compiler

      - name: Create __init__.py in root
        run: touch __init__.py

      - name: Generate gRPC Code (Directly to Root)
        run: |
          python -m grpc_tools.protoc -Iproto --python_betterproto_out=viuapi proto/viu-api.proto
          python -m grpc_tools.protoc -Iproto --python_betterproto_out=jinaembed proto/jinaembed.proto
          touch viuapi/__init__.py
          touch jinaembed/__init__.py

      - name: Set PYTHONPATH and PATH (Using GITHUB_ENV)
        run: |
          echo "PYTHONPATH=.:$PYTHONPATH" >> $GITHUB_ENV
          echo "PATH=$HOME/.local/bin:$PATH" >> $GITHUB_ENV

      - name: Debug - List Files
        run: ls -la

      - name: Debug PYTHONPATH and PATH
        run: |
          echo "PYTHONPATH is: $PYTHONPATH"
          echo "PATH is: $PATH"

      - name: Debug - Check if 'generated' is Importable
        run: python -c "import viuapi; print('Generated module is importable!')"

      - name: Install protoc-gen-doc
        run: |
          go install github.com/pseudomuto/protoc-gen-doc/cmd/protoc-gen-doc@latest
          echo "$HOME/go/bin" >> $GITHUB_ENV  # Use GITHUB_ENV for persistence!

      - name: Generate Documentation
        run: |
          mkdir -p docs
          protoc -Iproto --doc_out=docs --doc_opt=markdown,README.md proto/viu-api.proto proto/jinaembed.proto

      - name: Debug - Show README Content
        run: cat docs/README.md

      - name: Debug - Git Status (Before Commit)
        run: git status

      - name: Commit and Push README
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          git add docs/README.md  # Only add the generated README
          git commit -m "Auto-update README with BetterProto API documentation" || echo "No changes to commit"
          git push origin main

      - name: Debug - Git Status (After Commit)
        run: git status
