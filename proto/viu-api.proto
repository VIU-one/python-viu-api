syntax = "proto3";

package viuapi;


// ApiService provides a set of RPC methods for generating text embeddings
// using different underlying models.  It acts as a unified interface for
// accessing various embedding services.
service ApiService {
  // Embeds a single text string using the NVEmbedV2 model.
  //
  // Args:
  //   request: An EmbedNVEmbedV2Request containing the text to embed.
  //
  // Returns:
  //   An EmbedNVEmbedV2Response containing the generated embedding.
  rpc EmbedNVEmbedV2 (EmbedNVEmbedV2Request) returns (EmbedNVEmbedV2Response);

  // Embeds a single text string using the BGEGemma2 model.
  //
  // Args:
  //   request: An EmbedBGEGemma2Request containing the text.
  //
  // Returns:
  //   An EmbedBGEGemma2Response with the embedding.
  rpc EmbedBGEGemma2 (EmbedBGEGemma2Request) returns (EmbedBGEGemma2Response);

  // Embeds multiple text strings using the JinaEmbeddingsV3 model.
  // This method supports batch processing of text inputs.
  //
  // Args:
  //   request: A JinaEmbedRequest containing the texts and task type.
  //
  // Returns:
  //   A JinaEmbedReply containing the embeddings for each input text.
  rpc EmbedJinaEmbeddingsV3 (JinaEmbedRequest) returns (JinaEmbedReply);
}

// Request message for the EmbedNVEmbedV2 RPC.
message EmbedNVEmbedV2Request {
  // The text string to be embedded.  This should be a single, coherent
  // piece of text (e.g., a sentence, paragraph, or document).
  string text = 1;
}

// Response message for the EmbedNVEmbedV2 RPC.
message EmbedNVEmbedV2Response {
  // The generated embedding vector.  This is a list of floating-point
  // numbers representing the text in a high-dimensional space.
  repeated float embedding = 1;
}

// Request message for the EmbedBGEGemma2 RPC.
message EmbedBGEGemma2Request {
  // The text string to be embedded.
  string text = 1;
}

// Response message for the EmbedBGEGemma2 RPC.
message EmbedBGEGemma2Response {
  // The generated embedding vector, represented as a list of floats.
  repeated float embedding = 1;
}


// Enum representing the different task types for Jina embeddings.
// These task types can be used to fine-tune the embedding generation
// process for specific downstream applications.
enum JinaTaskType {
  // Unspecified task type.  Use this if the task type is not known
  // or not relevant.
  TASK_UNSPECIFIED = 0;

  // Used for embedding queries in a retrieval context.
  RETRIEVAL_QUERY = 1;

  // Used for embedding passages or documents in a retrieval context.
  RETRIEVAL_PASSAGE = 2;

  // Used for tasks involving text separation or segmentation.
  SEPARATION = 3;

  // Used for text classification tasks.
  CLASSIFICATION = 4;

  // Used for comparing the similarity of two or more texts.
  TEXT_MATCHING = 5;
}

// Request message for generating embeddings with JinaEmbeddingsV3.
message JinaEmbedRequest {
  // A list of text strings to be embedded.  This allows for batch
  // processing of multiple texts in a single request.
  repeated string texts = 1;

  // The task type for which the embeddings are being generated.
  // This helps the model optimize the embeddings for the specific task.
  JinaTaskType task = 2;

  // Optional.  Specifies the dimensionality to which the embeddings
  // should be truncated.  If provided, the embedding vectors will be
  // truncated to this length.  If not provided, the full embedding
  // dimensionality will be returned.
  int32 truncate_dim = 3;
}

// Response message containing the generated embeddings.
message JinaEmbedReply {
  // A list of JinaEmbedding objects, one for each input text in the
  // corresponding JinaEmbedRequest.  The order of embeddings in this
  // list matches the order of texts in the request.
  repeated JinaEmbedding embeddings = 1;
}

// Represents a single text embedding.
message JinaEmbedding {
  // The embedding vector, represented as a list of floating-point values.
  repeated float values = 1;
}